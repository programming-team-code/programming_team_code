name: programming team code CI

on: push

permissions:
  contents: write

jobs:
  library_checker_aizu:
    # https://github.com/actions/runner-images/issues/6709#issuecomment-1441444332
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
    - name: Install dependencies
      run: pip3 install -U online-judge-verify-helper
    - name: Set up Rust (nightly)
      run: |
        rustup set profile minimal
        rustup install nightly
        rustup override set nightly
    - name: Set up git submodules
      run: |
        git submodule init
        git submodule update
        rm -rf hackpack-cpp/tests/
    - name: Run library checker and aizu tests
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: oj-verify all --tle 60 --timeout 21600

  grep_clangformat_cppcheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up LLVM repository
      run: |
        sudo apt update
        sudo apt install -y wget software-properties-common
        wget -O - https://apt.llvm.org/llvm.sh | sudo bash
    - name: Install dependencies
      run: sudo apt update && sudo apt install -y clang-format-19 cppcheck
    - name: grep, clang-format, cppcheck
      run: make --directory=tests/ grep_clangformat_cppcheck

  clangtidy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up LLVM repository
      run: |
        sudo apt update
        sudo apt install -y wget software-properties-common
        wget -O - https://apt.llvm.org/llvm.sh | sudo bash
    - name: Install dependencies
      run: sudo apt update && sudo apt install -y clang-tidy-19
    - name: clang-tidy
      run: make --directory=tests/ clangtidy

  compile_gcc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: g++ with gcc
      run: make --directory=tests/ compile_gcc

  compile_clang:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up LLVM repository
      run: wget -qO- https://apt.llvm.org/llvm.sh | sudo bash -s -- 19
    - name: Install dependencies
      run: sudo apt update && sudo apt install -y clang-19
    - name: g++ with clang
      run: make --directory=tests/ compile_clang

  find_files_without_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: find files without tests
      run: make --directory=tests/ find_files_without_tests

  build_pdf:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install texlive, rename, nodejs, npm, clang
      run: |
        sudo apt update
        sudo apt install texlive texlive-latex-extra rename nodejs npm
        wget -qO- https://apt.llvm.org/llvm.sh | sudo bash -s -- 19
        sudo apt update && sudo apt install -y clang-19
    - name: build pdf
      run: make --directory=tests/ build_pdf
    - uses: actions/upload-artifact@v4
      with:
        name: ptc
        path: tests/ptc.pdf

  publish_pdf:
    runs-on: ubuntu-latest
    needs: [library_checker_aizu, grep_clangformat_cppcheck, clangtidy, compile_gcc, compile_clang, find_files_without_tests, build_pdf]
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v4
      with:
        name: ptc
        path: tests/ptc.pdf
    - uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: ptc
        prerelease: false
        title: ptc
        files: tests/ptc.pdf

  update_main:
    runs-on: ubuntu-latest
    needs: [library_checker_aizu, grep_clangformat_cppcheck, clangtidy, compile_gcc, compile_clang, find_files_without_tests]
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
    - name: Set up LLVM repository
      run: |
        sudo apt update
        sudo apt install -y wget software-properties-common
        wget -O - https://apt.llvm.org/llvm.sh | sudo bash
    - name: Install dependencies
      run: sudo apt update && sudo apt install -y clang-format-19
    - name: Combine includes and force push to main branch
      run: |
        git config --local user.name github-actions
        git config --local user.email 160645609+programming-team-code@users.noreply.github.com
        make --directory=tests/ update_main
        git rm -rf library/ tests/ .verify-helper/ .gitmodules kactl/ hackpack-cpp/ notebook-generator/ .github/
        git add --all
        git commit --message "programming_team_code"
        git checkout -b main
        git push origin main --force

  shellcheck_shfmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: sudo apt install shfmt shellcheck
    - name: shellcheck, shfmt
      run: make --directory=tests/ shellcheck_shfmt
